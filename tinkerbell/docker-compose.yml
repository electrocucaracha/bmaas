---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2020
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
version: "3.8"
services:
  # Stores Tinkerbell's hardware data, templates, and workflows
  db:
    image: postgres:10-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
    volumes:
      - db_data:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tinkerbell"]
      interval: 1s
      timeout: 1s
      retries: 30
  tink-server-migration:
    image: quay.io/tinkerbell/tink
    restart: on-failure
    environment:
      ONLY_MIGRATION: "true"
      FACILITY: onprem
      PGDATABASE: $POSTGRES_DB
      PGHOST: postgres
      PGPASSWORD: $POSTGRES_PASSWORD
      PGPORT: 5432
      PGSSLMODE: disable
      PGUSER: $POSTGRES_USER
      TINKERBELL_GRPC_AUTHORITY: :42113
      TINKERBELL_HTTP_AUTHORITY: :42114
      TINK_AUTH_USERNAME: ${TINK_AUTH_USERNAME}
      TINK_AUTH_PASSWORD: ${TINK_AUTH_PASSWORD}
    links:
      - db:postgres
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /var/local/certs:/certs/onprem
  # Responsible for processing workflows
  tink-server:
    image: quay.io/tinkerbell/tink
    restart: unless-stopped
    environment:
      FACILITY: onprem
      PACKET_ENV: testing
      PACKET_VERSION: ignored
      ROLLBAR_TOKEN: ignored
      ROLLBAR_DISABLE: -1
      PGDATABASE: $POSTGRES_DB
      PGHOST: postgres
      PGPASSWORD: $POSTGRES_PASSWORD
      PGPORT: 5432
      PGSSLMODE: disable
      PGUSER: $POSTGRES_USER
      TINKERBELL_GRPC_AUTHORITY: :42113
      TINKERBELL_HTTP_AUTHORITY: :42114
      TINK_AUTH_USERNAME: ${TINK_AUTH_USERNAME}
      TINK_AUTH_PASSWORD: ${TINK_AUTH_PASSWORD}
    links:
      - db:postgres
    depends_on:
      tink-server-migration:
        condition: service_started
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- 127.0.0.1:42114/cert"]
      interval: 5s
      timeout: 2s
      retries: 30
    volumes:
      - /var/local/certs:/certs/onprem
    ports:
      - 42113:42113/tcp
      - 42114:42114/tcp
  # Stores all of the action images used in a workflow.
  registry:
    image: registry:2
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://$USERNAME:$PASSWORD@localhost:5000"]
      interval: 5s
      timeout: 1s
      retries: 5
    environment:
      USERNAME: $REGISTRY_USERNAME
      PASSWORD: $REGISTRY_PASSWORD
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: /var/local/registry/auth/htpasswd
    volumes:
      - registry_images:/var/lib/registry
      - registry_auth:/var/local/registry/auth
  # Handles DHCP requests, hands out IPs, and serves up iPXE.
  boots:
    image: quay.io/tinkerbell/boots
    restart: unless-stopped
    command: -log-level DEBUG
    environment:
      API_AUTH_TOKEN: ignored
      API_CONSUMER_TOKEN: ignored
      FACILITY_CODE: onprem
      PACKET_ENV: testing
      PACKET_VERSION: ignored
      ROLLBAR_TOKEN: ignored
      ROLLBAR_DISABLE: -1
      MIRROR_HOST: $TINKERBELL_HOST_IP:8080
      MIRROR_PATH: /misc/osie/current
      DNS_SERVERS: 8.8.8.8
      PUBLIC_IP: $TINKERBELL_HOST_IP
      BOOTP_BIND: 0.0.0.0:67
      HTTP_BIND: 0.0.0.0:80
      SYSLOG_BIND: 0.0.0.0:514
      TFTP_BIND: 0.0.0.0:69
      DOCKER_REGISTRY: localhost:5000
      REGISTRY_USERNAME: $REGISTRY_USERNAME
      REGISTRY_PASSWORD: $REGISTRY_PASSWORD
      TINKERBELL_GRPC_AUTHORITY: $TINKERBELL_HOST_NAME:42113
      TINKERBELL_CERT_URL: http://$TINKERBELL_HOST_NAME:42114/cert
      ELASTIC_SEARCH_URL: $TINKERBELL_HOST_IP:9200
      DATA_MODEL_VERSION: 1
    depends_on:
      tink-server:
        condition: service_healthy
      db:
        condition: service_healthy
    network_mode: host
  # Collects data from both and transforms it into a JSON format to be consumed as metadata.
  hegel:
    image: quay.io/tinkerbell/hegel
    restart: unless-stopped
    environment:
      ROLLBAR_TOKEN: ignored
      ROLLBAR_DISABLE: 1
      PACKET_ENV: testing
      PACKET_VERSION: ignored
      GRPC_PORT: 42115
      HEGEL_FACILITY: onprem
      HEGEL_USE_TLS: 0
      TINKERBELL_GRPC_AUTHORITY: tinkerbell:42113
      TINKERBELL_CERT_URL: http://tinkerbell:42114/cert
      DATA_MODEL_VERSION: 1
    links:
      - tink-server:tinkerbell
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 50060:50060/tcp
      - 50061:50061/tcp
  # Serves boot files and OS images during workflow execution.
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    links:
      - registry:docker-registry
    ports:
      - 8080:30080/tcp
      - 5000:35000/tcp
    volumes:
      - nginx_data:/opt/tinkerbell/boots/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
volumes:
  db_data:
    driver: local
    driver_opts:
      type: bind
      device: ${POSTGRES_DATA_PATH}
      o: bind
  registry_images:
    driver: local
    driver_opts:
      type: bind
      device: ${REGISTRY_DATA_PATH}/images
      o: bind
  registry_auth:
    driver: local
    driver_opts:
      type: bind
      device: ${REGISTRY_DATA_PATH}/auth
      o: bind
  nginx_data:
    driver: local
    driver_opts:
      type: bind
      device: ${OSIE_DATA_PATH}
      o: bind
