---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2022
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

name: Check End-to-End installation
# yamllint disable-line rule:truthy
on:
  push:
    paths:
      - 'pxe_server/*'
      - 'bifrost/*'
      - 'tinkerbell/*'
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:
  check-format:
    name: Check scripts format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Run the sh-checker
        uses: luizm/action-sh-checker@v0.5.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHFMT_OPTS: -i 4 -s
        with:
          sh_checker_shellcheck_disable: true
  changes:
    runs-on: ubuntu-latest
    outputs:
      pxe: ${{ steps.filter.outputs.pxe }}
      bifrost: ${{ steps.filter.outputs.bifrost }}
      tinkerbell: ${{ steps.filter.outputs.tinkerbell }}
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: dorny/paths-filter@v2.11.1
        if: ${{ !env.ACT }}
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            pxe:
              - 'pxe_server/*'
            bifrost:
              - 'bifrost/*'
            tinkerbell:
              - 'tinkerbell/*'
  check-pxe:
    if: needs.changes.outputs.pxe == 'true'
    name: Check PXE server installation in an Ubuntu Bionic Virtual Environment
    runs-on: ubuntu-20.04
    needs:
      - changes
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Deploy services
        run: |
          cd pxe_server/
          ./deploy_tftp.sh
          ./deploy_dhcp.sh
          ./deploy_pxe.sh
  check-bifrost:
    if: needs.changes.outputs.bifrost == 'true'
    name: Check OpenStack Bifrost installation in an Ubuntu Bionic Virtual Machine
    runs-on: macos-10.15
    needs:
      - changes
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Cache Vagrant boxes
        uses: actions/cache@v3.2.4
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
          restore-keys: |
            ${{ runner.os }}-vagrant-
      - name: Apply workaround for VBoxHeadless issue on macOS (https://www.virtualbox.org/ticket/20636)
        shell: bash
        run: |
          if [[ "$(VBoxManage --version)" == "6.1.28r147628" ]]; then
              find . -type f -iname "Vagrantfile" -exec sed -i '.bak' 's|v.gui = .*|v.gui = true|g' {} \;
              find . -type f -name "*.bak" -delete
          fi
      - name: Replace shorten links
        run: |
          find . -type f -iname "*sh" -exec sed -i '.bak' 's|http://bit.ly/install_pkg|https://raw.githubusercontent.com/electrocucaracha/pkg-mgr_scripts/master/install.sh|g' {} \;
          find . -type f -iname "*sh" -exec sed -i '.bak' 's|http://bit.ly/install_bin|https://raw.githubusercontent.com/electrocucaracha/pkg-mgr_scripts/master/bindep_install.sh|g' {} \;
          find . -type f -name "*.bak" -delete
      - name: Deploy Bifrost instance
        env:
          VAGRANT_DISABLE_VBOXSYMLINKCREATE: 1
        run: vagrant up bifrost
      - name: Check HW resources
        if: failure()
        run: |
          vm_stat
          top -l 1 -n 0
          VBoxManage list runningvms --long
  check-tinkerbell:
    if: needs.changes.outputs.tinkerbell == 'true'
    name: Check Tinkerbell installation in an Ubuntu Bionic Virtual Environment
    runs-on: ubuntu-20.04
    needs:
      - changes
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Deploy services
        run: |
          cd tinkerbell/
          ./install.sh
          ./setup.sh
          ./deploy.sh
